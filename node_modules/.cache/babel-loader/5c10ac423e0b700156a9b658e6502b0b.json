{"ast":null,"code":"var _jsxFileName = \"/Users/ningfei/domain-starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport { ethers } from \"ethers\"; // Constants\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = 'nffund';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`; // Add the domain you will be minting\n\nconst tld = '.ogg';\nconst CONTRACT_ADDRESS = '0x13Fb35c956125090a7c1FA071f4D626d077F2e70';\n\nconst App = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(''); // Add some state data propertie\n\n  const [domain, setDomain] = useState('');\n  const [record, setRecord] = useState('');\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask -> https://metamask.io/\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log('Make sure you have metamask!');\n      return;\n    } else {\n      console.log('We have the ethereum object', ethereum);\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log('Found an authorized account:', account);\n      setCurrentAccount(account);\n    } else {\n      console.log('No authorized account found');\n    }\n  }; // Render methods\n\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\",\n      alt: \"ogg donut gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this); // Form to enter domain name and data\n\n\n  const renderInputForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: domain,\n          placeholder: \"domain\",\n          onChange: e => setDomain(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tld\",\n          children: [\" \", tld, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: record,\n        placeholder: \"whats ur ninja power\",\n        onChange: e => setRecord(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: null,\n          onClick: null,\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button mint-button\",\n          disabled: null,\n          onClick: null,\n          children: \"Set data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this);\n  };\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \"OGG Name Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Your immortal API on the blockchain!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), !currentAccount && renderNotConnectedContainer(), currentAccount && renderInputForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"5TsYO3KmDmy7tqvLMUab8aaeLW0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ningfei/domain-starter/src/App.js"],"names":["React","useEffect","useState","twitterLogo","ethers","TWITTER_HANDLE","TWITTER_LINK","tld","CONTRACT_ADDRESS","App","currentAccount","setCurrentAccount","domain","setDomain","record","setRecord","connectWallet","ethereum","window","alert","accounts","request","method","console","log","error","checkIfWalletIsConnected","length","account","renderNotConnectedContainer","renderInputForm","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport {ethers} from \"ethers\";\n\n// Constants\nconst TWITTER_HANDLE = 'nffund';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n// Add the domain you will be minting\nconst tld = '.ogg';\nconst CONTRACT_ADDRESS = '0x13Fb35c956125090a7c1FA071f4D626d077F2e70';\n\nconst App = () => {\n\tconst [currentAccount, setCurrentAccount] = useState('');\n\t// Add some state data propertie\n\tconst [domain, setDomain] = useState('');\n  const [record, setRecord] = useState('');\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask -> https://metamask.io/\");\n        return;\n      }\n\t\t\t\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n      \n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\tconst checkIfWalletIsConnected = async () => {\n\t\tconst { ethereum } = window;\n\n\t\tif (!ethereum) {\n\t\t\tconsole.log('Make sure you have metamask!');\n\t\t\treturn;\n\t\t} else {\n\t\t\tconsole.log('We have the ethereum object', ethereum);\n\t\t}\n\n\t\tconst accounts = await ethereum.request({ method: 'eth_accounts' });\n\n\t\tif (accounts.length !== 0) {\n\t\t\tconst account = accounts[0];\n\t\t\tconsole.log('Found an authorized account:', account);\n\t\t\tsetCurrentAccount(account);\n\t\t} else {\n\t\t\tconsole.log('No authorized account found');\n\t\t}\n\t};\n\n\t// Render methods\n\tconst renderNotConnectedContainer = () => (\n\t\t<div className=\"connect-wallet-container\">\n\t\t\t<img src=\"https://media.giphy.com/media/3ohhwytHcusSCXXOUg/giphy.gif\" alt=\"ogg donut gif\" />\n      {/* Call the connectWallet function we just wrote when the button is clicked */}\n\t\t\t<button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n\t\t\t\tConnect Wallet\n\t\t\t</button>\n\t\t</div>\n\t);\n\t\n\t// Form to enter domain name and data\n\tconst renderInputForm = () =>{\n\t\treturn (\n\t\t\t<div className=\"form-container\">\n\t\t\t\t<div className=\"first-row\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={domain}\n\t\t\t\t\t\tplaceholder='domain'\n\t\t\t\t\t\tonChange={e => setDomain(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<p className='tld'> {tld} </p>\n\t\t\t\t</div>\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={record}\n\t\t\t\t\tplaceholder='whats ur ninja power'\n\t\t\t\t\tonChange={e => setRecord(e.target.value)}\n\t\t\t\t/>\n\n\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t<button className='cta-button mint-button' disabled={null} onClick={null}>\n\t\t\t\t\t\tMint\n\t\t\t\t\t</button>  \n\t\t\t\t\t<button className='cta-button mint-button' disabled={null} onClick={null}>\n\t\t\t\t\t\tSet data\n\t\t\t\t\t</button>  \n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n  \n\tuseEffect(() => {\n\t\tcheckIfWalletIsConnected();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<div className=\"left\">\n\t\t\t\t\t\t\t<p className=\"title\">OGG Name Service</p>\n\t\t\t\t\t\t\t<p className=\"subtitle\">Your immortal API on the blockchain!</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{!currentAccount && renderNotConnectedContainer()}\n\t\t\t\t{/* Render the input form if an account is connected */}\n\t\t\t\t{currentAccount && renderInputForm()}\n\t\t\t\t\n\t\t\t\t<div className=\"footer-container\">\n\t\t\t\t\t<img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"footer-text\"\n\t\t\t\t\t\thref={TWITTER_LINK}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t>{`built with @${TWITTER_HANDLE}`}</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}